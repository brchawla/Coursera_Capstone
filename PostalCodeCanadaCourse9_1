<h1 align="center"><font size="5">Segmenting and Clustering Neighborhoods in Toronto - by Brijesh</font></h1>

import pandas as pd
import numpy as np

### Dataset
The given dataset from Wikipedia is being copied into a CVS file (namely: PostalCodeCanadaCourse9.csv).
The CVS file is then imported as an asset and then following code will be utilized to import the CVS file into dataset
using pandas and subsequently utilizing panda library to reach to the final dataset through scrapping and modifying the dataset
### Load Data From CSV File

from project_lib import Project
project = Project(project_id='c294b687-8a0c-4264-bf22-2c976222a3dc', project_access_token='p-be37302cc688c27c3f7e6760471d067585a08fff')
df = pd.read_csv(project.get_file('PostalCodesCanada.csv'))
df.head()


<H2>1: Ignore cells with a borough that is Not assigned</H2>
<H4>First - replace 'Not assigned' Borough cells with Nan value</H4>
<H4>Then - use dropna command to drop those cells</H4>
df['Borough'].replace('Not assigned', np.nan, inplace=True)
df.head()
df.dropna(subset=['Borough'], inplace=True)
df.head()


<H2>2: Combine Neighbourhood for same PostCode/Borough</H2>
<H4>Use lambda and grouby to achieve that</H4>
newDf = df.groupby(['Postcode','Borough'])['Neighbourhood'].apply(lambda x: ', '.join(x.astype(str))).reset_index()
newDf.head()


<H3>3. If a cell has a Borough but a Not assigned Neighborhood, then the Neighborhood will be the same as the Borough</H3>
<H4>Use the replace method</H4>
newDf['Neighbourhood'].replace('Not assigned', newDf['Borough'], inplace=True)
newDf.head()


<H3>4. Call the .shape method</H3>
newDf.shape
